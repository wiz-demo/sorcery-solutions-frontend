name: Build/Scan/Push Containers

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (overrides branch-based logic)'
        required: false
        type: choice
        options:
        - staging
        - production
        - develop
  push:
    branches:
      - staging      
      - main
      - develop

permissions:
  id-token: write
  contents: read

env:
  DEPLOY_ENV: ${{ 
    github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 
    (github.ref == 'refs/heads/main' && 'production') ||
    (github.ref == 'refs/heads/develop' && 'develop') ||
    'staging' }}

jobs:
  build_main:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/develop'
    
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Get Secret Details
        uses: 1password/load-secrets-action@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0
        with:
          export-env: true
        env:
          IMAGE_REGISTRY: op://wiz-demo/scenarios_gar-registry-${{ env.DEPLOY_ENV }}/registryUrl
          REGISTRY_REGION: op://wiz-demo/scenarios_gar-registry-${{ env.DEPLOY_ENV }}/registryRegion
          WIF_PROVIDER: op://wiz-demo/scenarios_gar-registry-${{ env.DEPLOY_ENV }}/workloadIdentityProvider
          WIF_SERVICE_ACCOUNT: op://wiz-demo/scenarios_gar-registry-${{ env.DEPLOY_ENV }}/pusherServiceAccount
          WIZ_CLIENT_ID: op://wiz-demo/tenant_adv-${{ env.DEPLOY_ENV == 'staging' && 'stg-' || '-' }}sa/username
          WIZ_CLIENT_SECRET: op://wiz-demo/tenant_adv-${{ env.DEPLOY_ENV == 'staging' && 'stg-' || '-' }}sa/credential

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Collect Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=${{ env.DEPLOY_ENV }}-{{sha}}

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SERVICE_ACCOUNT }}

      - name: Login to Container Registry
        run: gcloud auth configure-docker ${{ env.REGISTRY_REGION }}-docker.pkg.dev
        
      - name: Build Docker Image
        id: build-image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}
            ${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ env.DEPLOY_ENV }}-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Pull image for scan
        run: docker pull ${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }} 
        continue-on-error: true

      - name: Run Wiz Security Scan
        run: |
          curl -Lo wizcli https://wizcli.app.wiz.io/latest/wizcli-linux-amd64
          chmod +x wizcli
          ./wizcli auth --id "${{ env.WIZ_CLIENT_ID }}" --secret "${{ env.WIZ_CLIENT_SECRET }}"
          ./wizcli docker scan --image "${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}" --dockerfile "./Dockerfile"
          ./wizcli docker tag --image "${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}"
        env:
          WIZ_ENV: "demo"
        continue-on-error: true

  build_develop:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'develop')
    
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Get Develop Secret Details
        uses: 1password/load-secrets-action@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0
        with:
          export-env: true
        env:
          IMAGE_REGISTRY: op://wiz-demo/scenarios_gar-registry-develop/registryUrl
          REGISTRY_REGION: op://wiz-demo/scenarios_gar-registry-develop/registryRegion
          WIF_PROVIDER: op://wiz-demo/scenarios_gar-registry-develop/workloadIdentityProvider
          WIF_SERVICE_ACCOUNT: op://wiz-demo/scenarios_gar-registry-develop/pusherServiceAccount
          WIZ_CLIENT_ID: op://wiz-demo/tenant_adv-stg-sa/username
          WIZ_CLIENT_SECRET: op://wiz-demo/tenant_adv-stg-sa/credential

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Collect Docker Metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=develop-{{sha}}

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SERVICE_ACCOUNT }}
        continue-on-error: true

      - name: Login to Container Registry
        run: gcloud auth configure-docker ${{ env.REGISTRY_REGION }}-docker.pkg.dev
        continue-on-error: true
        
      - name: Build Docker Image
        id: build-image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}
            ${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:develop-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
        continue-on-error: true

      - name: Pull image for scan
        run: docker pull ${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }} 
        continue-on-error: true

      - name: Run Wiz Security Scan for Develop
        run: |
          curl -Lo wizcli https://wizcli.app.wiz.io/latest/wizcli-linux-amd64
          chmod +x wizcli
          ./wizcli auth --id "${{ env.WIZ_CLIENT_ID }}" --secret "${{ env.WIZ_CLIENT_SECRET }}"
          ./wizcli docker scan --image "${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}" --dockerfile "./Dockerfile"
          ./wizcli docker tag --image "${{ env.IMAGE_REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}"
        env:
          WIZ_ENV: "demo"
        continue-on-error: true

      - name: Handle Development Environment Issues
        if: failure()
        run: |
          echo "::error::Build failed for develop environment"
          echo "::error::This may be due to ephemeral GAR registry issues. Please check:"
          echo "::error::  1. Does the 'scenarios_gar-registry-develop' entry exist in 1Password?"
          echo "::error::  2. Does the GAR registry referenced in 1Password still exist?"
          echo "::error::  3. Are the credentials in 1Password still valid?"
          echo "::error::"
          echo "::error::If the develop GAR registry was deleted, you may need to:"
          echo "::error::  - Create a new develop GAR registry"
          echo "::error::  - Update the 'scenarios_gar-registry-develop' entry in 1Password with new registry details"
          echo "::error::  - Or remove the 1Password entry if develop environment is no longer needed"
          exit 1
         
